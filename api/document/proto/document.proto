syntax = "proto3";

option go_package = ".";

/*
=================
    Metadata
=================
*/
message DocumentMeta {
    int32 page = 1;
    int32 per_page = 2;
    int32 total = 3;
}

/*
=================
Parameter Request
=================
*/
message DocumentParameterRequest {
    int32 page = 1;
    int32 per_page = 2;
    string order_by = 3;
    string order_method = 4;
    string date_start = 5;
    string date_end = 6;
    string status = 7;
    optional string channel = 8;
    optional string docflow = 9;
    optional string search = 10;
}

/*
=================
    Response
=================
*/
message Documents {
    optional string unsigned_doc = 1;
    optional string signed_doc = 2;
}

message UpdateDocumentResponse {     
    string reff_number = 1;
    string title = 2;
    string doc_category = 3;
    optional int32 document_id = 4;
}

message GetDocumentResponse {    
    string reff_number = 1;
    string title = 2;
    string doc_category = 3;
    Documents documents = 4;
    string status = 5;
    string created_at = 6;
    string doc_flow = 7;
    string doc_owner = 8;
    string sign_type = 9;
    string channel_code = 10;
}

message UploadDocResponse {        
    string title = 1;
    string reff_number = 2;
    string doc_name = 3;
    string sign_type = 4;
    string doc_category = 5;
    string doc_flow = 6;    
    optional int32 document_id = 7;
    string channel_code = 8;
}

message DeleteDocumentResponse {    
    bool result = 1;
}

message ListDocument {
    string reff_number = 1;
    string doc_flow = 2;
    string created_at = 3;
    string title = 4;
    string status = 5;
    string channel_code = 6;
}

message ListServiceDocumentResponse {
    repeated ListDocument data = 1;
    DocumentMeta meta = 2;
}

message UploadFileResponse {
    string message = 1;
}

message DownloadFileResponse {
    string file_name = 1;
    bytes file_content = 2;
}

message SupportingDocumentResponse {
    string supporting_document_id = 1;
    string document_type = 2;
    string document_file = 3;
    string instruction = 4;
    string transaction_id = 5;
  }
  
  message InvoiceDocumentResponse {
    string invoice_document_id = 1;
    string invoice_request = 2;
    string unsigned_invoice = 3;
    string signed_invoice = 4;
    string payment_proof = 5;
    string transaction_id = 6;
  }

/*
=================
    Request
=================
*/
message UpdateDocumentRequest {
    string reff_number = 1;
    optional string title = 2;
    optional string doc_category = 3;
    optional string token = 4;
    optional string status = 5;
    optional bytes signed_document = 6;
    optional string channel_code = 7;
}

message GetDocumentRequest {
    string reff_number = 1;
    optional string doc_token = 2;
}

message UploadDocRequest{
    string application_code = 1;   
    string filename = 2;
    bytes doc_file = 3;
    int32 sign_type = 4;
    int32 doc_flow = 5;
    string doc_category = 6;    
    string title = 7;
    string channel_code = 8;
}

message DeleteDocumentRequest {
    string reff_number = 1;
}

message RevokeDocumentRequest {
    string reff_no = 1;
    string doc_status = 2;
}

message UploadFileRequest {
    string filename = 1;
    bytes content = 2;
}

message DownloadFileRequest {
    repeated string file_names = 1;
}

message GetInvoiceDocumentRequest {
  string transaction_id = 1;
}

message GetInvoiceDocumentResponse {
  InvoiceDocumentResponse invoice_document = 1;
}

message CreateInvoiceDocumentRequest {
  string invoice_request = 1;
  string unsigned_invoice = 2;
  string signed_invoice = 3;
  string payment_proof = 4;
  string transaction_id = 5;
}

message CreateInvoiceDocumentResponse {
  InvoiceDocumentResponse invoice_document = 1;
}

message UpdateInvoiceDocumentRequest {
  string invoice_request = 1;
  string unsigned_invoice = 2;
  string signed_invoice = 3;
  string payment_proof = 4;
  string transaction_id = 5;
}

message UpdateInvoiceDocumentResponse {
  InvoiceDocumentResponse invoice_document = 1;
}

message GetSupportingDocumentRequest {
  string transaction_id = 1;
}

message GetSupportingDocumentResponse {
  repeated SupportingDocumentResponse supporting_document = 1;
}

message CreateSupportingDocumentRequest {
  string document_type = 1;
  string document_file = 2;
  string instruction = 3;
  string transaction_id = 4;
}

message CreateSupportingDocumentResponse {
  SupportingDocumentResponse supporting_document = 1;
}

message UpdateSupportingDocumentRequest {
  string supporting_document_id = 1;
  string document_type = 2;
  string document_file = 3;
  string instruction = 4;
  string transaction_id = 5;
}

message UpdateSupportingDocumentResponse {
  SupportingDocumentResponse supporting_document = 1;
}

/*
=================
    Service
=================
*/
service Document {
    rpc StoreDocument(stream UploadDocRequest) returns (UploadDocResponse);    
    rpc GetDocumentByReffNumber(GetDocumentRequest) returns (GetDocumentResponse);
    rpc UpdateDocumentByReffNumber(UpdateDocumentRequest) returns (UpdateDocumentResponse);
    rpc DeleteDocumentByReffNumber(DeleteDocumentRequest) returns (DeleteDocumentResponse);

    rpc ListDocument (DocumentParameterRequest) returns (ListServiceDocumentResponse);
    rpc RevokeDocument (RevokeDocumentRequest) returns (GetDocumentResponse);

    rpc UploadFileService(stream UploadFileRequest) returns (UploadFileResponse) {}
    rpc DownloadFileService(DownloadFileRequest) returns (stream DownloadFileResponse);

    rpc GetInvoiceDocument(GetInvoiceDocumentRequest) returns (GetInvoiceDocumentResponse);
    rpc GetSupportingDocument(GetSupportingDocumentRequest) returns (GetSupportingDocumentResponse);
    rpc CreateInvoiceDocument(CreateInvoiceDocumentRequest) returns (CreateInvoiceDocumentResponse);
    rpc CreateSupportingDocument(CreateSupportingDocumentRequest) returns (CreateSupportingDocumentResponse);
    rpc UpdateInvoiceDocument(UpdateInvoiceDocumentRequest) returns (UpdateInvoiceDocumentResponse);
    rpc UpdateSupportingDocument(UpdateSupportingDocumentRequest) returns (UpdateSupportingDocumentResponse);
}

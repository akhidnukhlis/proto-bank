syntax = "proto3";

package invoice;

option go_package = ".";

import "api/meta/proto/meta.proto";

/*
===========================
          Enums
===========================
*/
enum SourceEnum {
  SOURCE_UNSPECIFIED = 0;
  SOURCE_INTERNAL = 1;
  SOURCE_EXTERNAL = 2;
}

enum TransactionTypeEnum {
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  TRANSACTION_TYPE_TOPUP = 1;
  TRANSACTION_TYPE_TRANSFER = 2;
}

enum PaymentTypeEnum {
  PAYMENT_TYPE_UNSPECIFIED = 0;
  PAYMENT_TYPE_PREPAID = 1;
  PAYMENT_TYPE_POSTPAID = 2;
}

enum StatusEnum {
  STATUS_UNSPECIFIED = 0;
  STATUS_WAITING_APPROVAL = 1;
  STATUS_SUCCESS = 2;
  STATUS_REJECT_REQUEST = 3;
  STATUS_PENDING = 4;
  STATUS_EXPIRED = 5;
  STATUS_WAITING_INVOICE = 6;
  STATUS_WAITING_SIGNER = 7;
  STATUS_PROCESSING_DOCUMENT = 8;
  STATUS_UNPAID = 9;
  STATUS_INVOICE_OVERDUE = 10;
  STATUS_WAITING_VERIFICATION = 11;
  STATUS_PAID = 12;
  STATUS_REJECT_PAYMENT = 13;
}

enum BalanceTypeEnum {
  BALANCE_TYPE_UNSPECIFIED = 0;
  BALANCE_TYPE_ESIGN = 1;
  BALANCE_TYPE_OTP = 2;
  BALANCE_TYPE_EMATERAI = 3;
  BALANCE_TYPE_REGISTRATION = 4;
  BALANCE_TYPE_EMPLOYEE_ACCOUNT = 5;
  BALANCE_TYPE_BLAST = 6;
  BALANCE_TYPE_OCR = 7;
  BALANCE_TYPE_FACE_RECOGNITION = 8;
  BALANCE_TYPE_DEMOGRAPHY = 9;
  BALANCE_TYPE_ID_VERIFICATION = 10;
  BALANCE_TYPE_ESEAL = 11;
  BALANCE_TYPE_LIVENESS = 12;
}


/*
===========================
        Entities
===========================
*/
message TransactionEntity {
  string id = 1;
  string channel_code = 2;
  StatusEnum status = 3;
  string transfer_from = 4;
  string transfer_to = 5;
  string created_by = 6;
  TransactionTypeEnum transaction_type = 7;
  string origin = 8;
  string destination = 9;
  SourceEnum source = 10;
  string customer_id = 11;
  string request_number = 12;
  string payment_id = 13;
  string invoice_number = 14;
  string created_at = 15;
  string updated_at = 16;
  string deleted_at = 17;
}

message CustomerRequestEntity {
  string request_number = 1;
  string requested_at = 2;
  string request_approved_at = 3;
  string request_rejected_at = 4;
  string request_reject_reason = 5;
  string created_at = 6;
  string updated_at = 7;
  string deleted_at = 8;
}

message CustomerEntity {
  string id = 1;
  string cc = 2;
  string bcc = 3;
  string send_invoice_to = 4;
  string send_invoice_request_to = 5;
  string requester_name = 6;
  string company_name = 7;
  string project_name = 8;
  string pic = 9;
  string bill_to_email = 10;
  string phone_number_pic = 11;
  string letter_address = 12;
  string created_at = 13;
  string updated_at = 14;
  string deleted_at = 15;
}

message PaymentEntity {
  string id = 1;
  string payment_due_date = 2;
  string payment_term = 3;
  string payment_rejected_at = 4;
  string payment_reject_reason = 5;
  PaymentTypeEnum payment_type = 6;
  string paid_at = 7;
  string created_at = 8;
  string updated_at = 9;
  string deleted_at = 10;
}

message InvoiceEntity {
  string invoice_number = 1;
  string invoice_due_date = 2;
  string invoice_request_due_date = 3;
  string invoice_requested_at = 4;
  string invoice_shipment = 5;
  string integration_type = 6;
  string cut_off_date = 7;
  string work_type = 8;
  int32 ppn = 9;
  string ppn_report = 10;
  string created_at = 11;
  string updated_at = 12;
  string deleted_at = 13;
}

message TransactionDetailEntity {
  string id = 1;
  int32 price = 2;
  int32 quantity = 3;
  int32 discount = 4;
  int32 tax = 5;
  int32 total_amount = 6;
  string transaction_id = 7;
  string balance_type_code = 8;
  string description = 9;
  string start_period = 10;
  string end_period = 11;
  string created_at = 12;
  string updated_at = 13;
  string deleted_at = 14;
}


/*
===========================
        Transactions
===========================
*/
message GetAllTransactionRequest {
  TransactionEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllTransactionResponse {
  repeated TransactionEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetTransactionByIdRequest {
  string id = 1;
}

message GetTransactionByIdResponse {
  TransactionEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreateTransactionRequest {
  TransactionEntity data = 1;
}

message CreateTransactionResponse {
  TransactionEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdateTransactionRequest {
  TransactionEntity data = 1;
}

message UpdateTransactionResponse {
  TransactionEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeleteTransactionRequest {
  string id = 1;
}

message DeleteTransactionResponse {
  TransactionEntity data = 1;
  meta.BaseResponse meta = 2;
}


/*
===========================
      Customer Request
===========================
*/
message GetAllCustomerRequestRequest {
  CustomerRequestEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllCustomerRequestResponse {
  repeated CustomerRequestEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetCustomerRequestByRequestNumberRequest {
  string request_number = 1;
}

message GetCustomerRequestByRequestNumberResponse {
  CustomerRequestEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreateCustomerRequestRequest {
  CustomerRequestEntity data = 1;
}

message CreateCustomerRequestResponse {
  CustomerRequestEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdateCustomerRequestRequest {
  CustomerRequestEntity data = 1;
}

message UpdateCustomerRequestResponse {
  CustomerRequestEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeleteCustomerRequestRequest {
  string request_number = 1;
}

message DeleteCustomerRequestResponse {
  CustomerRequestEntity data = 1;
  meta.BaseResponse meta = 2;
}


/*
===========================
          Customer
===========================
*/
message GetAllCustomerRequest {
  CustomerEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllCustomerResponse {
  repeated CustomerEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetCustomerByIdRequest {
  string id = 1;
}

message GetCustomerByIdResponse {
  CustomerEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreateCustomerRequest {
  CustomerEntity data = 1;
}

message CreateCustomerResponse {
  CustomerEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdateCustomerRequest {
  CustomerEntity data = 1;
}

message UpdateCustomerResponse {
  CustomerEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeleteCustomerRequest {
  string id = 1;
}

message DeleteCustomerResponse {
  CustomerEntity data = 1;
  meta.BaseResponse meta = 2;
}


/*
===========================
          Payment
===========================
*/
message GetAllPaymentRequest {
  PaymentEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllPaymentResponse {
  repeated PaymentEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetPaymentByIdRequest {
  string id = 1;
}

message GetPaymentByIdResponse {
  PaymentEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreatePaymentRequest {
  PaymentEntity data = 1;
}

message CreatePaymentResponse {
  PaymentEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdatePaymentRequest {
  PaymentEntity data = 1;
}

message UpdatePaymentResponse {
  PaymentEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeletePaymentRequest {
  string id = 1;
}

message DeletePaymentResponse {
  PaymentEntity data = 1;
  meta.BaseResponse meta = 2;
}


/*
===========================
          Invoice
===========================
*/
message GetAllInvoiceRequest {
  InvoiceEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllInvoiceResponse {
  repeated InvoiceEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetInvoiceByInvoiceNumberRequest {
  string invoice_number = 1;
}

message GetInvoiceByInvoiceNumberResponse {
  InvoiceEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreateInvoiceRequest {
  InvoiceEntity data = 1;
}

message CreateInvoiceResponse {
  InvoiceEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdateInvoiceRequest {
  InvoiceEntity data = 1;
}

message UpdateInvoiceResponse {
  InvoiceEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeleteInvoiceRequest {
  string id = 1;
}

message DeleteInvoiceResponse {
  InvoiceEntity data = 1;
  meta.BaseResponse meta = 2;
}

/*
===========================
    Transaction Detail
===========================
*/
message GetAllTransactionDetailRequest {
  TransactionDetailEntity filter = 1;
  meta.Request meta = 2;
}

message GetAllTransactionDetailResponse {
  repeated TransactionDetailEntity data = 1;
  meta.BaseResponse meta = 2;
}

message GetTransactionDetailByIdRequest {
  string id = 1;
}

message GetTransactionDetailByIdResponse {
  TransactionDetailEntity data = 1;
  meta.BaseResponse meta = 2;
}

message CreateTransactionDetailRequest {
  TransactionDetailEntity data = 1;
}

message CreateTransactionDetailResponse {
  TransactionDetailEntity data = 1;
  meta.BaseResponse meta = 2;
}

message UpdateTransactionDetailRequest {
  TransactionDetailEntity data = 1;
}

message UpdateTransactionDetailResponse {
  TransactionDetailEntity data = 1;
  meta.BaseResponse meta = 2;
}

message DeleteTransactionDetailRequest {
  string id = 1;
}

message DeleteTransactionDetailResponse {
  TransactionDetailEntity data = 1;
  meta.BaseResponse meta = 2;
}


/*
===========================
          Service
===========================
*/
service TransactionService {
  rpc GetAllTransaction(GetAllTransactionRequest) returns (GetAllTransactionResponse);
  rpc GetTransactionById(GetTransactionByIdRequest) returns (GetTransactionByIdResponse);
  rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse);
  rpc UpdateTransaction(UpdateTransactionRequest) returns (UpdateTransactionResponse);
  rpc DeleteTransaction(DeleteTransactionRequest) returns (DeleteTransactionResponse);

  rpc GetAllCustomerReq(GetAllCustomerRequestRequest) returns (GetAllCustomerRequestResponse);
  rpc GetCustomerReqByRequestNumber(GetCustomerRequestByRequestNumberRequest) returns (GetCustomerRequestByRequestNumberResponse);
  rpc CreateCustomerReq(CreateCustomerRequestRequest) returns (CreateCustomerRequestResponse);
  rpc UpdateCustomerReq(UpdateCustomerRequestRequest) returns (UpdateCustomerRequestResponse);
  rpc DeleteCustomerReq(DeleteCustomerRequestRequest) returns (DeleteCustomerRequestResponse);

  rpc GetAllCustomer(GetAllCustomerRequest) returns (GetAllCustomerResponse);
  rpc GetCustomerById(GetCustomerByIdRequest) returns (GetCustomerByIdResponse);
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);
  rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse);

  rpc GetAllPayment(GetAllPaymentRequest) returns (GetAllPaymentResponse);
  rpc GetPaymentById(GetPaymentByIdRequest) returns (GetPaymentByIdResponse);
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);
  rpc UpdatePayment(UpdatePaymentRequest) returns (UpdatePaymentResponse);
  rpc DeletePayment(DeletePaymentRequest) returns (DeletePaymentResponse);

  rpc GetAllInvoice(GetAllInvoiceRequest) returns (GetAllInvoiceResponse);
  rpc GetInvoiceByInvoiceNumber(GetInvoiceByInvoiceNumberRequest) returns (GetInvoiceByInvoiceNumberResponse);
  rpc CreateInvoice(CreateInvoiceRequest) returns (CreateInvoiceResponse);
  rpc UpdateInvoice(UpdateInvoiceRequest) returns (UpdateInvoiceResponse);
  rpc DeleteInvoice(DeleteInvoiceRequest) returns (DeleteInvoiceResponse);

  rpc GetAllTransactionDetail(GetAllTransactionDetailRequest) returns (GetAllTransactionDetailResponse);
  rpc GetTransactionDetailById(GetTransactionDetailByIdRequest) returns (GetTransactionDetailByIdResponse);
  rpc CreateTransactionDetail(CreateTransactionDetailRequest) returns (CreateTransactionDetailResponse);
  rpc UpdateTransactionDetail(UpdateTransactionDetailRequest) returns (UpdateTransactionDetailResponse);
  rpc DeleteTransactionDetail(DeleteTransactionDetailRequest) returns (DeleteTransactionDetailResponse);
}

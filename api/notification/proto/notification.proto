syntax = "proto3";

package notification;

option go_package = ".";

import "api/meta/proto/meta.proto";

/*
=================
Enum
=================
*/
enum ActionTypeEnum {
    TOP_UP_BALANCE = 0;
    TRANSFER_BALANCE = 1;
    RECEIVED_BALANCE = 2;
    LOW_BALANCE_REMINDER = 3;
    APPROVAL_APP_MANAGEMENT = 4;
    APPROVAL_CUSTOMIZE_APP_PAGE = 5;
}

message CaseActionType {
    enum BalanceEnum {
        waiting_for_invoice = 0;
        invoice_issued_and_waiting_for_payment = 1;
        waiting_for_verification = 2;
        balance_rejected = 3;
        approved = 4;
        overdue = 5;
    }

    enum ApprovalEnum {
        submit_approval_for_changes = 0;
        changes_approved = 1;
        changes_rejected = 2;
    }

    enum PlacementStatusEnum {
        submitted = 0;
        completed = 1;
        revoked = 2;
        rejected = 3;
    }

    oneof case_action {
        BalanceEnum case_action1 = 1;
        ApprovalEnum case_action2 = 2;
        PlacementStatusEnum case_action3 = 3;
    }
}

/*
=================
Data
=================
*/
message NotificationData {
    string title = 1;
    string content = 2;
    string link_type = 3;
    string link = 4;
}

message Notification {
    uint32 id = 1;
    string status = 2;
    string actor = 3;
    NotificationData data = 4;
    string created_at = 5;
    string read_at = 6;
}


/*
=================
Parameter Request
=================
*/
message GetNotificationsRequest {
    string status = 1;
    uint32 page = 2;
    uint32 limit = 3;
}

message UpdateReadStatusNotificationRequest{
    uint32 id = 1;
    string string = 2;
}

message SendNotificationRequest {
    ActionTypeEnum action_type = 1;
    CaseActionType case_action_type = 2;
    string id_transaction = 3;
    uint64 amount = 4;
}

/*
=================
Response
=================
*/
message ListNotificationResponse {
    meta.Pagination pagination = 1;
    repeated Notification data = 2;
}


service NotificationService {
    rpc GetNotifications(GetNotificationsRequest) returns(ListNotificationResponse);
    rpc UpdateReadStatusNotification(UpdateReadStatusNotificationRequest) returns(meta.BaseResponseV2);
    rpc SendNotification(SendNotificationRequest) returns(meta.BaseResponseV2);
}